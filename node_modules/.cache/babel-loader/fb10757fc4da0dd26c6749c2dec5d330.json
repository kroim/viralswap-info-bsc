{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\pancake-info-v1\\\\src\\\\components\\\\TxnList\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { formatTime, formattedNum, urls } from '../../utils';\nimport { useMedia } from 'react-use';\nimport { useCurrentCurrency } from '../../contexts/Application';\nimport { RowFixed, RowBetween } from '../Row';\nimport LocalLoader from '../LocalLoader';\nimport { Box, Flex, Text } from 'rebass';\nimport Link from '../Link';\nimport { Divider, EmptyCard } from '..';\nimport DropdownSelect from '../DropdownSelect';\nimport FormattedName from '../FormattedName';\nimport { TYPE } from '../../Theme';\nimport { updateNameData } from '../../utils/data';\ndayjs.extend(utc);\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`;\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${props => props.faded ? 0.3 : 1};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`;\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'txn value time';\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 500px) {\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 780px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther time';\n\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther account time';\n  }\n`;\nconst ClickableText = styled(Text)`\n  color: ${({\n  theme\n}) => theme.text1};\n  user-select: none;\n  text-align: end;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  @media screen and (max-width: 640px) {\n    font-size: 14px;\n  }\n`;\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: right;\n  color: ${({\n  theme\n}) => theme.text1};\n\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 40em) {\n    font-size: 0.85rem;\n  }\n`;\nconst SortText = styled.button`\n  cursor: pointer;\n  font-weight: ${({\n  active,\n  theme\n}) => active ? 500 : 400};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({\n  active,\n  theme\n}) => active ? theme.text1 : theme.text3};\n  outline: none;\n\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`;\nconst SORT_FIELD = {\n  VALUE: 'amountUSD',\n  AMOUNT0: 'token0Amount',\n  AMOUNT1: 'token1Amount',\n  TIMESTAMP: 'timestamp'\n};\nconst TXN_TYPE = {\n  ALL: 'All',\n  SWAP: 'Swaps',\n  ADD: 'Adds',\n  REMOVE: 'Removes'\n};\nconst ITEMS_PER_PAGE = 10;\n\nfunction getTransactionType(event, symbol0, symbol1) {\n  const formattedS0 = (symbol0 === null || symbol0 === void 0 ? void 0 : symbol0.length) > 8 ? symbol0.slice(0, 7) + '...' : symbol0;\n  const formattedS1 = (symbol1 === null || symbol1 === void 0 ? void 0 : symbol1.length) > 8 ? symbol1.slice(0, 7) + '...' : symbol1;\n\n  switch (event) {\n    case TXN_TYPE.ADD:\n      return 'Add ' + formattedS0 + ' and ' + formattedS1;\n\n    case TXN_TYPE.REMOVE:\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1;\n\n    case TXN_TYPE.SWAP:\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1;\n\n    default:\n      return '';\n  }\n} // @TODO rework into virtualized list\n\n\nfunction TxnList({\n  transactions,\n  symbol0Override,\n  symbol1Override,\n  color\n}) {\n  // page state\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1); // sorting\n\n  const [sortDirection, setSortDirection] = useState(true);\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP);\n  const [filteredItems, setFilteredItems] = useState();\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL);\n  const [currency] = useCurrentCurrency();\n  useEffect(() => {\n    setMaxPage(1); // edit this to do modular\n\n    setPage(1);\n  }, [transactions]); // parse the txns and format for UI\n\n  useEffect(() => {\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\n      let newTxns = [];\n\n      if (transactions.mints.length > 0) {\n        transactions.mints.map(mint => {\n          let newTxn = {};\n          newTxn.hash = mint.transaction.id;\n          newTxn.timestamp = mint.transaction.timestamp;\n          newTxn.type = TXN_TYPE.ADD;\n          newTxn.token0Amount = mint.amount0;\n          newTxn.token1Amount = mint.amount1;\n          newTxn.account = mint.to;\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol;\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol;\n          newTxn.amountUSD = mint.amountUSD;\n          return newTxns.push(newTxn);\n        });\n      }\n\n      if (transactions.burns.length > 0) {\n        transactions.burns.map(burn => {\n          let newTxn = {};\n          newTxn.hash = burn.transaction.id;\n          newTxn.timestamp = burn.transaction.timestamp;\n          newTxn.type = TXN_TYPE.REMOVE;\n          newTxn.token0Amount = burn.amount0;\n          newTxn.token1Amount = burn.amount1;\n          newTxn.account = burn.sender;\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol;\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol;\n          newTxn.amountUSD = burn.amountUSD;\n          return newTxns.push(newTxn);\n        });\n      }\n\n      if (transactions.swaps.length > 0) {\n        transactions.swaps.map(swap => {\n          const netToken0 = swap.amount0In - swap.amount0Out;\n          const netToken1 = swap.amount1In - swap.amount1Out;\n          let newTxn = {};\n\n          if (netToken0 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol;\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol;\n            newTxn.token0Amount = Math.abs(netToken0);\n            newTxn.token1Amount = Math.abs(netToken1);\n          } else if (netToken1 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol;\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol;\n            newTxn.token0Amount = Math.abs(netToken1);\n            newTxn.token1Amount = Math.abs(netToken0);\n          }\n\n          newTxn.hash = swap.transaction.id;\n          newTxn.timestamp = swap.transaction.timestamp;\n          newTxn.type = TXN_TYPE.SWAP;\n          newTxn.amountUSD = swap.amountUSD;\n          newTxn.account = swap.to;\n          return newTxns.push(newTxn);\n        });\n      }\n\n      const filtered = newTxns.filter(item => {\n        if (txFilter !== TXN_TYPE.ALL) {\n          return item.type === txFilter;\n        }\n\n        return true;\n      });\n      setFilteredItems(filtered);\n      let extraPages = 1;\n\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0;\n      }\n\n      if (filtered.length === 0) {\n        setMaxPage(1);\n      } else {\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages);\n      }\n    }\n  }, [transactions, txFilter]);\n  useEffect(() => {\n    setPage(1);\n  }, [txFilter]);\n  const filteredList = filteredItems && filteredItems.sort((a, b) => {\n    return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn]) ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1;\n  }).slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE);\n  const below1080 = useMedia('(max-width: 1080px)');\n  const below780 = useMedia('(max-width: 780px)');\n\n  const ListItem = ({\n    item\n  }) => {\n    return React.createElement(DashGrid, {\n      style: {\n        height: '48px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(DataText, {\n      area: \"txn\",\n      fontWeight: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Link, {\n      color: color,\n      external: true,\n      href: urls.showTransaction(item.hash),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, getTransactionType(item.type, item.token1Symbol, item.token0Symbol))), React.createElement(DataText, {\n      area: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, currency === 'ETH' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)), !below780 && React.createElement(React.Fragment, null, React.createElement(DataText, {\n      area: \"amountOther\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, formattedNum(item.token1Amount) + ' ', ' ', React.createElement(FormattedName, {\n      text: item.token1Symbol,\n      maxCharacters: 5,\n      margin: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })), React.createElement(DataText, {\n      area: \"amountToken\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, formattedNum(item.token0Amount) + ' ', ' ', React.createElement(FormattedName, {\n      text: item.token0Symbol,\n      maxCharacters: 5,\n      margin: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }))), !below1080 && React.createElement(DataText, {\n      area: \"account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Link, {\n      color: color,\n      external: true,\n      href: 'https://bscscan.com/address/' + item.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42))), React.createElement(DataText, {\n      area: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, formatTime(item.timestamp)));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(DashGrid, {\n    center: true,\n    style: {\n      height: 'fit-content',\n      padding: '0 0 1rem 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, below780 ? React.createElement(RowBetween, {\n    area: \"txn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(DropdownSelect, {\n    options: TXN_TYPE,\n    active: txFilter,\n    setActive: setTxFilter,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  })) : React.createElement(RowFixed, {\n    area: \"txn\",\n    gap: \"10px\",\n    pl: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, React.createElement(SortText, {\n    onClick: () => {\n      setTxFilter(TXN_TYPE.ALL);\n    },\n    active: txFilter === TXN_TYPE.ALL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \"All\"), React.createElement(SortText, {\n    onClick: () => {\n      setTxFilter(TXN_TYPE.SWAP);\n    },\n    active: txFilter === TXN_TYPE.SWAP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, \"Swaps\"), React.createElement(SortText, {\n    onClick: () => {\n      setTxFilter(TXN_TYPE.ADD);\n    },\n    active: txFilter === TXN_TYPE.ADD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"Adds\"), React.createElement(SortText, {\n    onClick: () => {\n      setTxFilter(TXN_TYPE.REMOVE);\n    },\n    active: txFilter === TXN_TYPE.REMOVE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, \"Removes\")), React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"flexStart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    color: \"textDim\",\n    area: \"value\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.VALUE);\n      setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, \"Total Value \", sortedColumn === SORT_FIELD.VALUE ? !sortDirection ? '↑' : '↓' : '')), !below780 && React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"amountToken\",\n    color: \"textDim\",\n    onClick: () => {\n      setSortedColumn(SORT_FIELD.AMOUNT0);\n      setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, symbol0Override ? symbol0Override + ' Amount' : 'Token Amount', ' ', sortedColumn === SORT_FIELD.AMOUNT0 ? sortDirection ? '↑' : '↓' : '')), React.createElement(React.Fragment, null, !below780 && React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"amountOther\",\n    color: \"textDim\",\n    onClick: () => {\n      setSortedColumn(SORT_FIELD.AMOUNT1);\n      setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, symbol1Override ? symbol1Override + ' Amount' : 'Token Amount', ' ', sortedColumn === SORT_FIELD.AMOUNT1 ? sortDirection ? '↑' : '↓' : '')), !below1080 && React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, React.createElement(TYPE.body, {\n    area: \"account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, \"Account\")), React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"time\",\n    color: \"textDim\",\n    onClick: () => {\n      setSortedColumn(SORT_FIELD.TIMESTAMP);\n      setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, \"Time \", sortedColumn === SORT_FIELD.TIMESTAMP ? !sortDirection ? '↑' : '↓' : '')))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }), React.createElement(List, {\n    p: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }, !filteredList ? React.createElement(LocalLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }) : filteredList.length === 0 ? React.createElement(EmptyCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, \"No recent transactions found.\") : filteredList.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      key: index,\n      index: index + 1,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }));\n  })), React.createElement(PageButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: e => {\n      setPage(page === 1 ? page : page - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    faded: page === 1 ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(TYPE.body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448\n    },\n    __self: this\n  }, 'Page ' + page + ' of ' + maxPage), React.createElement(\"div\", {\n    onClick: e => {\n      setPage(page === maxPage ? page : page + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    faded: page === maxPage ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, \"\\u2192\"))));\n}\n\nexport default TxnList;","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/pancake-info-v1/src/components/TxnList/index.js"],"names":["React","useState","useEffect","styled","dayjs","utc","formatTime","formattedNum","urls","useMedia","useCurrentCurrency","RowFixed","RowBetween","LocalLoader","Box","Flex","Text","Link","Divider","EmptyCard","DropdownSelect","FormattedName","TYPE","updateNameData","extend","PageButtons","div","Arrow","props","faded","List","DashGrid","ClickableText","theme","text1","DataText","SortText","button","active","text3","SORT_FIELD","VALUE","AMOUNT0","AMOUNT1","TIMESTAMP","TXN_TYPE","ALL","SWAP","ADD","REMOVE","ITEMS_PER_PAGE","getTransactionType","event","symbol0","symbol1","formattedS0","length","slice","formattedS1","TxnList","transactions","symbol0Override","symbol1Override","color","page","setPage","maxPage","setMaxPage","sortDirection","setSortDirection","sortedColumn","setSortedColumn","filteredItems","setFilteredItems","txFilter","setTxFilter","currency","mints","burns","swaps","newTxns","map","mint","newTxn","hash","transaction","id","timestamp","type","token0Amount","amount0","token1Amount","amount1","account","to","token0Symbol","pair","token0","symbol","token1Symbol","token1","amountUSD","push","burn","sender","swap","netToken0","amount0In","amount0Out","netToken1","amount1In","amount1Out","Math","abs","filtered","filter","item","extraPages","floor","filteredList","sort","a","b","parseFloat","below1080","below780","ListItem","height","showTransaction","valueETH","padding","e","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { formatTime, formattedNum, urls } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { useCurrentCurrency } from '../../contexts/Application'\r\nimport { RowFixed, RowBetween } from '../Row'\r\n\r\nimport LocalLoader from '../LocalLoader'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport Link from '../Link'\r\nimport { Divider, EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\nimport { updateNameData } from '../../utils/data'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: #2f80ed;\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'txn value time';\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 500px) {\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 780px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther time';\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther account time';\r\n  }\r\n`\r\n\r\nconst ClickableText = styled(Text)`\r\n  color: ${({ theme }) => theme.text1};\r\n  user-select: none;\r\n  text-align: end;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: right;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 40em) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst SortText = styled.button`\r\n  cursor: pointer;\r\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\r\n  margin-right: 0.75rem !important;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 1rem;\r\n  padding: 0px;\r\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\r\n  outline: none;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  VALUE: 'amountUSD',\r\n  AMOUNT0: 'token0Amount',\r\n  AMOUNT1: 'token1Amount',\r\n  TIMESTAMP: 'timestamp',\r\n}\r\n\r\nconst TXN_TYPE = {\r\n  ALL: 'All',\r\n  SWAP: 'Swaps',\r\n  ADD: 'Adds',\r\n  REMOVE: 'Removes',\r\n}\r\n\r\nconst ITEMS_PER_PAGE = 10\r\n\r\nfunction getTransactionType(event, symbol0, symbol1) {\r\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\r\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\r\n  switch (event) {\r\n    case TXN_TYPE.ADD:\r\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.REMOVE:\r\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.SWAP:\r\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\n// @TODO rework into virtualized list\r\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\r\n  const [filteredItems, setFilteredItems] = useState()\r\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\r\n\r\n  const [currency] = useCurrentCurrency()\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [transactions])\r\n\r\n  // parse the txns and format for UI\r\n  useEffect(() => {\r\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\r\n      let newTxns = []\r\n      if (transactions.mints.length > 0) {\r\n        transactions.mints.map((mint) => {\r\n          let newTxn = {}\r\n          newTxn.hash = mint.transaction.id\r\n          newTxn.timestamp = mint.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.ADD\r\n          newTxn.token0Amount = mint.amount0\r\n          newTxn.token1Amount = mint.amount1\r\n          newTxn.account = mint.to\r\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol\r\n          newTxn.amountUSD = mint.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.burns.length > 0) {\r\n        transactions.burns.map((burn) => {\r\n          let newTxn = {}\r\n          newTxn.hash = burn.transaction.id\r\n          newTxn.timestamp = burn.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.REMOVE\r\n          newTxn.token0Amount = burn.amount0\r\n          newTxn.token1Amount = burn.amount1\r\n          newTxn.account = burn.sender\r\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol\r\n          newTxn.amountUSD = burn.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.swaps.length > 0) {\r\n        transactions.swaps.map((swap) => {\r\n          const netToken0 = swap.amount0In - swap.amount0Out\r\n          const netToken1 = swap.amount1In - swap.amount1Out\r\n\r\n          let newTxn = {}\r\n\r\n          if (netToken0 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token0Amount = Math.abs(netToken0)\r\n            newTxn.token1Amount = Math.abs(netToken1)\r\n          } else if (netToken1 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token0Amount = Math.abs(netToken1)\r\n            newTxn.token1Amount = Math.abs(netToken0)\r\n          }\r\n\r\n          newTxn.hash = swap.transaction.id\r\n          newTxn.timestamp = swap.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.SWAP\r\n\r\n          newTxn.amountUSD = swap.amountUSD\r\n          newTxn.account = swap.to\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n\r\n      const filtered = newTxns.filter((item) => {\r\n        if (txFilter !== TXN_TYPE.ALL) {\r\n          return item.type === txFilter\r\n        }\r\n        return true\r\n      })\r\n      setFilteredItems(filtered)\r\n      let extraPages = 1\r\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      if (filtered.length === 0) {\r\n        setMaxPage(1)\r\n      } else {\r\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\r\n      }\r\n    }\r\n  }, [transactions, txFilter])\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [txFilter])\r\n\r\n  const filteredList =\r\n    filteredItems &&\r\n    filteredItems\r\n      .sort((a, b) => {\r\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n          ? (sortDirection ? -1 : 1) * 1\r\n          : (sortDirection ? -1 : 1) * -1\r\n      })\r\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below780 = useMedia('(max-width: 780px)')\r\n\r\n  const ListItem = ({ item }) => {\r\n    return (\r\n      <DashGrid style={{ height: '48px' }}>\r\n        <DataText area=\"txn\" fontWeight=\"500\">\r\n          <Link color={color} external href={urls.showTransaction(item.hash)}>\r\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\r\n          </Link>\r\n        </DataText>\r\n        <DataText area=\"value\">\r\n          {currency === 'ETH' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)}\r\n        </DataText>\r\n        {!below780 && (\r\n          <>\r\n            <DataText area=\"amountOther\">\r\n              {formattedNum(item.token1Amount) + ' '}{' '}\r\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n            <DataText area=\"amountToken\">\r\n              {formattedNum(item.token0Amount) + ' '}{' '}\r\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n          </>\r\n        )}\r\n        {!below1080 && (\r\n          <DataText area=\"account\">\r\n            <Link color={color} external href={'https://bscscan.com/address/' + item.account}>\r\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\r\n            </Link>\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n        {below780 ? (\r\n          <RowBetween area=\"txn\">\r\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\r\n          </RowBetween>\r\n        ) : (\r\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ALL)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ALL}\r\n            >\r\n              All\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.SWAP)\r\n              }}\r\n              active={txFilter === TXN_TYPE.SWAP}\r\n            >\r\n              Swaps\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ADD)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ADD}\r\n            >\r\n              Adds\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.REMOVE)\r\n              }}\r\n              active={txFilter === TXN_TYPE.REMOVE}\r\n            >\r\n              Removes\r\n            </SortText>\r\n          </RowFixed>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            color=\"textDim\"\r\n            area=\"value\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VALUE)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below780 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"amountToken\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.AMOUNT0)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\r\n              }}\r\n            >\r\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\r\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        <>\r\n          {!below780 && (\r\n            <Flex alignItems=\"center\">\r\n              <ClickableText\r\n                area=\"amountOther\"\r\n                color=\"textDim\"\r\n                onClick={() => {\r\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\r\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\r\n                }}\r\n              >\r\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\r\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\r\n              </ClickableText>\r\n            </Flex>\r\n          )}\r\n          {!below1080 && (\r\n            <Flex alignItems=\"center\">\r\n              <TYPE.body area=\"account\">Account</TYPE.body>\r\n            </Flex>\r\n          )}\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"time\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        </>\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {!filteredList ? (\r\n          <LocalLoader />\r\n        ) : filteredList.length === 0 ? (\r\n          <EmptyCard>No recent transactions found.</EmptyCard>\r\n        ) : (\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })\r\n        )}\r\n      </List>\r\n      <PageButtons>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === 1 ? page : page - 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === maxPage ? page : page + 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TxnList\r\n"]},"metadata":{},"sourceType":"module"}