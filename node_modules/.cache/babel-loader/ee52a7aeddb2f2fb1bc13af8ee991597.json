{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\pancake-info-v1\\\\src\\\\components\\\\DropdownSelect\\\\index.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Row, { RowBetween } from '../Row';\nimport { AutoColumn } from '../Column';\nimport { ChevronDown as Arrow } from 'react-feather';\nimport { TYPE } from '../../Theme';\nimport { StyledIcon } from '..';\nconst Wrapper = styled.div`\n  z-index: 20;\n  position: relative;\n  background-color: ${({\n  theme\n}) => theme.panelColor};\n  border: 1px solid ${({\n  open,\n  color\n}) => open ? color : 'rgba(0, 0, 0, 0.15);'} \n  width: 100px;\n  padding: 4px 10px;\n  padding-right: 6px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst Dropdown = styled.div`\n  position: absolute;\n  top: 34px;\n  padding-top: 40px;\n  width: calc(100% - 40px);\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 10px 10px;\n  border-radius: 8px;\n  width: calc(100% - 20px);\n  font-weight: 500;\n  font-size: 1rem;\n  color: black;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst ArrowStyled = styled(Arrow)`\n  height: 20px;\n  width: 20px;\n  margin-left: 6px;\n`;\n\nconst DropdownSelect = ({\n  options,\n  active,\n  setActive,\n  color\n}) => {\n  const [showDropdown, toggleDropdown] = useState(false);\n  return React.createElement(Wrapper, {\n    open: showDropdown,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(RowBetween, {\n    onClick: () => toggleDropdown(!showDropdown),\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TYPE.main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, active), React.createElement(StyledIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ArrowStyled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), showDropdown && React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, Object.keys(options).map((key, index) => {\n    let option = options[key];\n    return option !== active && React.createElement(Row, {\n      onClick: () => {\n        toggleDropdown(!showDropdown);\n        setActive(option);\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TYPE.body, {\n      fontSize: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, option));\n  }))));\n};\n\nexport default DropdownSelect;","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/pancake-info-v1/src/components/DropdownSelect/index.js"],"names":["React","useState","styled","Row","RowBetween","AutoColumn","ChevronDown","Arrow","TYPE","StyledIcon","Wrapper","div","theme","panelColor","open","color","Dropdown","bg1","ArrowStyled","DropdownSelect","options","active","setActive","showDropdown","toggleDropdown","Object","keys","map","key","index","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,IAAcC,UAAd,QAAgC,QAAhC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,eAArC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,IAA3B;AAEA,MAAMC,OAAO,GAAGR,MAAM,CAACS,GAAI;;;sBAGL,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAW;sBAChC,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAsBD,IAAI,GAAGC,KAAH,GAAW,sBAAwB;;;;;;;;;;;;CAJnF;AAkBA,MAAMC,QAAQ,GAAGd,MAAM,CAACS,GAAI;;;;;sBAKN,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,GAAI;;;;;;;;;;;CAL/C;AAkBA,MAAMC,WAAW,GAAGhB,MAAM,CAACK,KAAD,CAAQ;;;;CAAlC;;AAMA,MAAMY,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,SAAnB;AAA8BP,EAAAA;AAA9B,CAAD,KAA2C;AAChE,QAAM,CAACQ,YAAD,EAAeC,cAAf,IAAiCvB,QAAQ,CAAC,KAAD,CAA/C;AAEA,SACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEsB,YAAf;AAA6B,IAAA,KAAK,EAAER,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAMS,cAAc,CAAC,CAACD,YAAF,CAAzC;AAA0D,IAAA,OAAO,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,MAAZ,CADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,EAOGE,YAAY,IACX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqBO,GAArB,CAAyB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACxC,QAAIC,MAAM,GAAGV,OAAO,CAACQ,GAAD,CAApB;AACA,WACEE,MAAM,KAAKT,MAAX,IACE,oBAAC,GAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,cAAc,CAAC,CAACD,YAAF,CAAd;AACAD,QAAAA,SAAS,CAACQ,MAAD,CAAT;AACD,OAJH;AAKE,MAAA,GAAG,EAAED,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,QAAQ,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BC,MAA1B,CAPF,CAFJ;AAaD,GAfA,CADH,CADF,CARJ,CADF;AAgCD,CAnCD;;AAqCA,eAAeX,cAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Row, { RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\nimport { ChevronDown as Arrow } from 'react-feather'\r\nimport { TYPE } from '../../Theme'\r\nimport { StyledIcon } from '..'\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 20;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.panelColor};\r\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \r\n  width: 100px;\r\n  padding: 4px 10px;\r\n  padding-right: 6px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Dropdown = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  padding-top: 40px;\r\n  width: calc(100% - 40px);\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  padding: 10px 10px;\r\n  border-radius: 8px;\r\n  width: calc(100% - 20px);\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  color: black;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ArrowStyled = styled(Arrow)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-left: 6px;\r\n`\r\n\r\nconst DropdownSelect = ({ options, active, setActive, color }) => {\r\n  const [showDropdown, toggleDropdown] = useState(false)\r\n\r\n  return (\r\n    <Wrapper open={showDropdown} color={color}>\r\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\r\n        <TYPE.main>{active}</TYPE.main>\r\n        <StyledIcon>\r\n          <ArrowStyled />\r\n        </StyledIcon>\r\n      </RowBetween>\r\n      {showDropdown && (\r\n        <Dropdown>\r\n          <AutoColumn gap=\"20px\">\r\n            {Object.keys(options).map((key, index) => {\r\n              let option = options[key]\r\n              return (\r\n                option !== active && (\r\n                  <Row\r\n                    onClick={() => {\r\n                      toggleDropdown(!showDropdown)\r\n                      setActive(option)\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\r\n                  </Row>\r\n                )\r\n              )\r\n            })}\r\n          </AutoColumn>\r\n        </Dropdown>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DropdownSelect\r\n"]},"metadata":{},"sourceType":"module"}