{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\viralswap-info-bsc\\\\src\\\\components\\\\QuestionHelper\\\\index.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { HelpCircle as Question } from 'react-feather';\nimport styled from 'styled-components';\nimport Popover from '../Popover';\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  color: ${({\n  theme\n}) => theme.text2};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`;\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`;\nexport function Tooltip({\n  text,\n  ...rest\n}) {\n  return React.createElement(Popover, Object.assign({\n    content: React.createElement(TooltipContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, text)\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}\nexport default function QuestionHelper({\n  text,\n  disabled\n}) {\n  const [show, setShow] = useState(false);\n  const open = useCallback(() => setShow(true), [setShow]);\n  const close = useCallback(() => setShow(false), [setShow]);\n  return React.createElement(\"span\", {\n    style: {\n      marginLeft: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    text: text,\n    show: show && !disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(QuestionWrapper, {\n    onClick: open,\n    onMouseEnter: open,\n    onMouseLeave: close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Question, {\n    size: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/viralswap-info-bsc/src/components/QuestionHelper/index.tsx"],"names":["React","useCallback","useState","HelpCircle","Question","styled","Popover","QuestionWrapper","div","theme","bg2","text2","TooltipContainer","Tooltip","text","rest","QuestionHelper","disabled","show","setShow","open","close","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,UAAU,IAAIC,QAAvB,QAAuC,eAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAsC,YAAtC;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;sBAUb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAAI;WACpC,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,KAAM;;;;;;CAXtC;AAmBA,MAAMC,gBAAgB,GAAGP,MAAM,CAACG,GAAI;;;;;CAApC;AAWA,OAAO,SAASK,OAAT,CAAiB;AAAEC,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAjB,EAAkD;AACvD,SAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAnB;AAAlB,KAAmEC,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;AAED,eAAe,SAASC,cAAT,CAAwB;AAAEF,EAAAA,IAAF;AAAQG,EAAAA;AAAR,CAAxB,EAAkF;AAC/F,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAU,KAAV,CAAhC;AAEA,QAAMkB,IAAI,GAAGnB,WAAW,CAAC,MAAMkB,OAAO,CAAC,IAAD,CAAd,EAAsB,CAACA,OAAD,CAAtB,CAAxB;AACA,QAAME,KAAK,GAAGpB,WAAW,CAAC,MAAMkB,OAAO,CAAC,KAAD,CAAd,EAAuB,CAACA,OAAD,CAAvB,CAAzB;AAEA,SACE;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAER,IAAf;AAAqB,IAAA,IAAI,EAAEI,IAAI,IAAI,CAACD,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEG,IAA1B;AAAgC,IAAA,YAAY,EAAEA,IAA9C;AAAoD,IAAA,YAAY,EAAEC,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASD","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text2};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport default function QuestionHelper({ text, disabled }: { text: string; disabled?: boolean }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show && !disabled}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <Question size={16} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}