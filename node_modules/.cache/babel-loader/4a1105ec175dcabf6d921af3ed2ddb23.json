{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\pancake-info-v1\\\\src\\\\components\\\\AccountSearch\\\\index.js\";\nimport React, { useState } from 'react';\nimport 'feather-icons';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled';\nimport { AutoRow, RowBetween } from '../Row';\nimport { isAddress } from '../../utils';\nimport { useSavedAccounts } from '../../contexts/LocalStorage';\nimport { AutoColumn } from '../Column';\nimport { TYPE } from '../../Theme';\nimport { Hover, StyledIcon } from '..';\nimport Panel from '../Panel';\nimport { Divider } from '..';\nimport { Flex } from 'rebass';\nimport { X } from 'react-feather';\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  border-radius: 12px;\n`;\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  padding: 12px 16px;\n  border-radius: 12px;\n  color: ${({\n  theme\n}) => theme.text1};\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  font-size: 16px;\n  margin-right: 1rem;\n  border: 1px solid ${({\n  theme\n}) => theme.bg3};\n\n  ::placeholder {\n    color: ${({\n  theme\n}) => theme.text3};\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`;\nconst AccountLink = styled.span`\n  display: flex;\n  cursor: pointer;\n  color: ${({\n  theme\n}) => theme.link};\n  font-size: 14px;\n  font-weight: 500;\n`;\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr;\n  grid-template-areas: 'account';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n`;\n\nfunction AccountSearch({\n  history,\n  small\n}) {\n  const [accountValue, setAccountValue] = useState();\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts();\n\n  function handleAccountSearch() {\n    if (isAddress(accountValue)) {\n      history.push('/account/' + accountValue);\n\n      if (!savedAccounts.includes(accountValue)) {\n        addAccount(accountValue);\n      }\n    }\n  }\n\n  return React.createElement(AutoColumn, {\n    gap: '1rem',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, !small && React.createElement(React.Fragment, null, React.createElement(AutoRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"0x...\",\n    onChange: e => {\n      setAccountValue(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(ButtonLight, {\n    onClick: handleAccountSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Load Account Details\"))), React.createElement(AutoColumn, {\n    gap: '12px',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, !small && React.createElement(Panel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(DashGrid, {\n    center: true,\n    style: {\n      height: 'fit-content',\n      padding: '0 0 1rem 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(TYPE.main, {\n    area: \"account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Saved Accounts\")), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), (savedAccounts === null || savedAccounts === void 0 ? void 0 : savedAccounts.length) > 0 ? savedAccounts.map(account => {\n    return React.createElement(DashGrid, {\n      key: account,\n      center: true,\n      style: {\n        height: 'fit-content',\n        padding: '1rem 0 0 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      area: \"account\",\n      justifyContent: \"space-between\",\n      onClick: () => history.push('/account/' + account),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(AccountLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, account === null || account === void 0 ? void 0 : account.slice(0, 42)), React.createElement(Hover, {\n      onClick: e => {\n        e.stopPropagation();\n        removeAccount(account);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(StyledIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(X, {\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))));\n  }) : React.createElement(TYPE.light, {\n    style: {\n      marginTop: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"No saved accounts\")), small && React.createElement(React.Fragment, null, React.createElement(TYPE.main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, 'Accounts'), (savedAccounts === null || savedAccounts === void 0 ? void 0 : savedAccounts.length) > 0 ? savedAccounts.map(account => {\n    return React.createElement(RowBetween, {\n      key: account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(ButtonFaded, {\n      onClick: () => history.push('/account/' + account),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, small ? React.createElement(TYPE.header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, (account === null || account === void 0 ? void 0 : account.slice(0, 6)) + '...' + (account === null || account === void 0 ? void 0 : account.slice(38, 42))) : React.createElement(AccountLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, account === null || account === void 0 ? void 0 : account.slice(0, 42))), React.createElement(Hover, {\n      onClick: () => removeAccount(account),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(StyledIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(X, {\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))));\n  }) : React.createElement(TYPE.light, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"No pinned wallets\"))));\n}\n\nexport default withRouter(AccountSearch);","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/pancake-info-v1/src/components/AccountSearch/index.js"],"names":["React","useState","withRouter","styled","ButtonLight","ButtonFaded","AutoRow","RowBetween","isAddress","useSavedAccounts","AutoColumn","TYPE","Hover","StyledIcon","Panel","Divider","Flex","X","Wrapper","div","Input","input","theme","text1","bg1","bg3","text3","AccountLink","span","link","DashGrid","AccountSearch","history","small","accountValue","setAccountValue","savedAccounts","addAccount","removeAccount","handleAccountSearch","push","includes","e","target","value","height","padding","length","map","account","slice","stopPropagation","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,iBAAzC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,QAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,IAAlC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAASC,CAAT,QAAkB,eAAlB;AAEA,MAAMC,OAAO,GAAGf,MAAM,CAACgB,GAAI;;;;;;;CAA3B;AASA,MAAMC,KAAK,GAAGjB,MAAM,CAACkB,KAAM;;;;;;;;;;;WAWhB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;sBAChB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,GAAI;;;sBAGzB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,GAAI;;;aAGlC,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,KAAM;;;;;;;;;CAlBxC;AA6BA,MAAMC,WAAW,GAAGxB,MAAM,CAACyB,IAAK;;;WAGrB,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,IAAK;;;CAHrC;AAQA,MAAMC,QAAQ,GAAG3B,MAAM,CAACgB,GAAI;;;;;;;;;;CAA5B;;AAYA,SAASY,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAvB,EAA2C;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,EAAhD;AACA,QAAM,CAACmC,aAAD,EAAgBC,UAAhB,EAA4BC,aAA5B,IAA6C7B,gBAAgB,EAAnE;;AAEA,WAAS8B,mBAAT,GAA+B;AAC7B,QAAI/B,SAAS,CAAC0B,YAAD,CAAb,EAA6B;AAC3BF,MAAAA,OAAO,CAACQ,IAAR,CAAa,cAAcN,YAA3B;;AACA,UAAI,CAACE,aAAa,CAACK,QAAd,CAAuBP,YAAvB,CAAL,EAA2C;AACzCG,QAAAA,UAAU,CAACH,YAAD,CAAV;AACD;AACF;AACF;;AAED,SACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,KAAD,IACC,0CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,QAAQ,EAAGS,CAAD,IAAO;AACfP,MAAAA,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATF,CADF,CAFJ,EAiBE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACN,KAAD,IACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAE,IAAlB;AAAwB,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE,aAAV;AAAyBC,MAAAA,OAAO,EAAE;AAAlC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKG,CAAAV,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEW,MAAf,IAAwB,CAAxB,GACCX,aAAa,CAACY,GAAd,CAAmBC,OAAD,IAAa;AAC7B,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,OAAf;AAAwB,MAAA,MAAM,EAAE,IAAhC;AAAsC,MAAA,KAAK,EAAE;AAAEJ,QAAAA,MAAM,EAAE,aAAV;AAAyBC,QAAAA,OAAO,EAAE;AAAlC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,cAAc,EAAC,eAFjB;AAGE,MAAA,OAAO,EAAE,MAAMd,OAAO,CAACQ,IAAR,CAAa,cAAcS,OAA3B,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcA,OAAd,aAAcA,OAAd,uBAAcA,OAAO,CAAEC,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAd,CALF,EAME,oBAAC,KAAD;AACE,MAAA,OAAO,EAAGR,CAAD,IAAO;AACdA,QAAAA,CAAC,CAACS,eAAF;AACAb,QAAAA,aAAa,CAACW,OAAD,CAAb;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,CAAD;AAAG,MAAA,IAAI,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CANF,CADF,CADF;AAqBD,GAtBD,CADD,GAyBC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA9BJ,CAFJ,EAqCGnB,KAAK,IACJ,0CACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY,UAAZ,CADF,EAEG,CAAAG,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEW,MAAf,IAAwB,CAAxB,GACCX,aAAa,CAACY,GAAd,CAAmBC,OAAD,IAAa;AAC7B,WACE,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,MAAMjB,OAAO,CAACQ,IAAR,CAAa,cAAcS,OAA3B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,KAAK,GACJ,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,CAAAgB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,CAAe,CAAf,EAAkB,CAAlB,KAAuB,KAAvB,IAA+BD,OAA/B,aAA+BA,OAA/B,uBAA+BA,OAAO,CAAEC,KAAT,CAAe,EAAf,EAAmB,EAAnB,CAA/B,CAAd,CADI,GAGJ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcD,OAAd,aAAcA,OAAd,uBAAcA,OAAO,CAAEC,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAd,CAJJ,CADF,EAQE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAMZ,aAAa,CAACW,OAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,CAAD;AAAG,MAAA,IAAI,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CARF,CADF;AAgBD,GAjBD,CADD,GAoBC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAtBJ,CAtCJ,CAjBF,CADF;AAqFD;;AAED,eAAe/C,UAAU,CAAC6B,aAAD,CAAzB","sourcesContent":["import React, { useState } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { isAddress } from '../../utils'\r\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\r\nimport { AutoColumn } from '../Column'\r\nimport { TYPE } from '../../Theme'\r\nimport { Hover, StyledIcon } from '..'\r\nimport Panel from '../Panel'\r\nimport { Divider } from '..'\r\nimport { Flex } from 'rebass'\r\n\r\nimport { X } from 'react-feather'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  border-radius: 12px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  color: ${({ theme }) => theme.text1};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  font-size: 16px;\r\n  margin-right: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst AccountLink = styled.span`\r\n  display: flex;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.link};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 1fr;\r\n  grid-template-areas: 'account';\r\n  padding: 0 4px;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n  }\r\n`\r\n\r\nfunction AccountSearch({ history, small }) {\r\n  const [accountValue, setAccountValue] = useState()\r\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\r\n\r\n  function handleAccountSearch() {\r\n    if (isAddress(accountValue)) {\r\n      history.push('/account/' + accountValue)\r\n      if (!savedAccounts.includes(accountValue)) {\r\n        addAccount(accountValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AutoColumn gap={'1rem'}>\r\n      {!small && (\r\n        <>\r\n          <AutoRow>\r\n            <Wrapper>\r\n              <Input\r\n                placeholder=\"0x...\"\r\n                onChange={(e) => {\r\n                  setAccountValue(e.target.value)\r\n                }}\r\n              />\r\n            </Wrapper>\r\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\r\n          </AutoRow>\r\n        </>\r\n      )}\r\n\r\n      <AutoColumn gap={'12px'}>\r\n        {!small && (\r\n          <Panel>\r\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\r\n            </DashGrid>\r\n            <Divider />\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map((account) => {\r\n                return (\r\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\r\n                    <Flex\r\n                      area=\"account\"\r\n                      justifyContent=\"space-between\"\r\n                      onClick={() => history.push('/account/' + account)}\r\n                    >\r\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      <Hover\r\n                        onClick={(e) => {\r\n                          e.stopPropagation()\r\n                          removeAccount(account)\r\n                        }}\r\n                      >\r\n                        <StyledIcon>\r\n                          <X size={16} />\r\n                        </StyledIcon>\r\n                      </Hover>\r\n                    </Flex>\r\n                  </DashGrid>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\r\n            )}\r\n          </Panel>\r\n        )}\r\n\r\n        {small && (\r\n          <>\r\n            <TYPE.main>{'Accounts'}</TYPE.main>\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map((account) => {\r\n                return (\r\n                  <RowBetween key={account}>\r\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\r\n                      {small ? (\r\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\r\n                      ) : (\r\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      )}\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removeAccount(account)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light>No pinned wallets</TYPE.light>\r\n            )}\r\n          </>\r\n        )}\r\n      </AutoColumn>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default withRouter(AccountSearch)\r\n"]},"metadata":{},"sourceType":"module"}