{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\pancake-info-v1\\\\src\\\\components\\\\TokenChart\\\\index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts';\nimport { AutoRow, RowBetween, RowFixed } from '../Row';\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils';\nimport { OptionButton } from '../ButtonStyled';\nimport { darken } from 'polished';\nimport { useMedia, usePrevious } from 'react-use';\nimport { timeframeOptions } from '../../constants';\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData';\nimport DropdownSelect from '../DropdownSelect';\nimport CandleStickChart from '../CandleChart';\nimport LocalLoader from '../LocalLoader';\nimport { AutoColumn } from '../Column';\nimport { Activity } from 'react-feather';\nimport { useDarkModeManager } from '../../contexts/LocalStorage';\nconst ChartWrapper = styled.div`\n  height: 100%;\n  min-height: 300px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`;\nconst PriceOption = styled(OptionButton)`\n  border-radius: 2px;\n`;\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  PRICE: 'Price',\n  LINE_PRICE: 'Price (Line)'\n};\nconst DATA_FREQUENCY = {\n  DAY: 'DAY',\n  HOUR: 'HOUR',\n  LINE: 'LINE'\n};\n\nconst TokenChart = ({\n  address,\n  color,\n  base\n}) => {\n  var _chartData, _ref$current, _ref$current$containe;\n\n  // settings for the window and candle width\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE);\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR);\n  const [darkMode] = useDarkModeManager();\n  const textColor = darkMode ? 'white' : 'black'; // reset view on new address\n\n  const addressPrev = usePrevious(address);\n  useEffect(() => {\n    if (address !== addressPrev && addressPrev) {\n      setChartFilter(CHART_VIEW.LIQUIDITY);\n    }\n  }, [address, addressPrev]);\n  let chartData = useTokenChartData(address);\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME);\n  const prevWindow = usePrevious(timeWindow); // hourly and daily price data based on the current time window\n\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600);\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600);\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600);\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400);\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400);\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400);\n  const priceData = timeWindow === timeframeOptions.MONTH ? // monthly selected\n  frequency === DATA_FREQUENCY.DAY ? dailyMonth : hourlyMonth : // weekly selected\n  timeWindow === timeframeOptions.WEEK ? frequency === DATA_FREQUENCY.DAY ? dailyWeek : hourlyWeek : // all time selected\n  frequency === DATA_FREQUENCY.DAY ? dailyAll : hourlyAll; // switch to hourly data when switched to week window\n\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\n      setFrequency(DATA_FREQUENCY.HOUR);\n    }\n  }, [prevWindow, timeWindow]); // switch to daily data if switche to month or all time view\n\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\n      setFrequency(DATA_FREQUENCY.DAY);\n    }\n\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\n      setFrequency(DATA_FREQUENCY.DAY);\n    }\n  }, [prevWindow, timeWindow]);\n  const below1080 = useMedia('(max-width: 1080px)');\n  const below600 = useMedia('(max-width: 600px)');\n  let utcStartTime = getTimeframe(timeWindow);\n  const domain = [dataMin => dataMin > utcStartTime ? dataMin : utcStartTime, 'dataMax'];\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22;\n  chartData = (_chartData = chartData) === null || _chartData === void 0 ? void 0 : _chartData.filter(entry => entry.date >= utcStartTime); // update the width on a window resize\n\n  const ref = useRef();\n  const isClient = typeof window === 'object';\n  const [width, setWidth] = useState(ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : (_ref$current$containe = _ref$current.container) === null || _ref$current$containe === void 0 ? void 0 : _ref$current$containe.clientWidth);\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      var _ref, _ref$current2, _ref$current2$contain;\n\n      setWidth((_ref = ref === null || ref === void 0 ? void 0 : (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : (_ref$current2$contain = _ref$current2.container) === null || _ref$current2$contain === void 0 ? void 0 : _ref$current2$contain.clientWidth) !== null && _ref !== void 0 ? _ref : width);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isClient, width]); // Empty array ensures that effect is only run on mount and unmount\n\n  return React.createElement(ChartWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, below600 ? React.createElement(RowBetween, {\n    mb: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(DropdownSelect, {\n    options: CHART_VIEW,\n    active: chartFilter,\n    setActive: setChartFilter,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(DropdownSelect, {\n    options: timeframeOptions,\n    active: timeWindow,\n    setActive: setTimeWindow,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })) : React.createElement(RowBetween, {\n    mb: chartFilter === CHART_VIEW.LIQUIDITY || chartFilter === CHART_VIEW.VOLUME || chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE ? 40 : 0,\n    align: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(RowFixed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(OptionButton, {\n    active: chartFilter === CHART_VIEW.LIQUIDITY,\n    onClick: () => setChartFilter(CHART_VIEW.LIQUIDITY),\n    style: {\n      marginRight: '6px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Liquidity\"), React.createElement(OptionButton, {\n    active: chartFilter === CHART_VIEW.VOLUME,\n    onClick: () => setChartFilter(CHART_VIEW.VOLUME),\n    style: {\n      marginRight: '6px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Volume\"), React.createElement(OptionButton, {\n    active: chartFilter === CHART_VIEW.PRICE,\n    onClick: () => {\n      setChartFilter(CHART_VIEW.PRICE);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Price\")), chartFilter === CHART_VIEW.PRICE && React.createElement(AutoRow, {\n    gap: \"4px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(PriceOption, {\n    active: frequency === DATA_FREQUENCY.DAY,\n    onClick: () => {\n      setTimeWindow(timeframeOptions.MONTH);\n      setFrequency(DATA_FREQUENCY.DAY);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"D\"), React.createElement(PriceOption, {\n    active: frequency === DATA_FREQUENCY.HOUR,\n    onClick: () => setFrequency(DATA_FREQUENCY.HOUR),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"H\"), React.createElement(PriceOption, {\n    active: frequency === DATA_FREQUENCY.LINE,\n    onClick: () => setFrequency(DATA_FREQUENCY.LINE),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Activity, {\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })))), React.createElement(AutoRow, {\n    justify: \"flex-end\",\n    gap: \"6px\",\n    align: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(OptionButton, {\n    active: timeWindow === timeframeOptions.WEEK,\n    onClick: () => setTimeWindow(timeframeOptions.WEEK),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"1W\"), React.createElement(OptionButton, {\n    active: timeWindow === timeframeOptions.MONTH,\n    onClick: () => setTimeWindow(timeframeOptions.MONTH),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"1M\"), React.createElement(OptionButton, {\n    active: timeWindow === timeframeOptions.ALL_TIME,\n    onClick: () => setTimeWindow(timeframeOptions.ALL_TIME),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"All\"))), chartFilter === CHART_VIEW.LIQUIDITY && chartData && React.createElement(ResponsiveContainer, {\n    aspect: aspect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    margin: {\n      top: 0,\n      right: 10,\n      bottom: 6,\n      left: 0\n    },\n    barCategoryGap: 1,\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"linearGradient\", {\n    id: \"colorUv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: color,\n    stopOpacity: 0.35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: color,\n    stopOpacity: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }))), React.createElement(XAxis, {\n    tickLine: false,\n    axisLine: false,\n    interval: \"preserveEnd\",\n    tickMargin: 16,\n    minTickGap: 120,\n    tickFormatter: tick => toNiceDate(tick),\n    dataKey: \"date\",\n    tick: {\n      fill: textColor\n    },\n    type: 'number',\n    domain: ['dataMin', 'dataMax'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    type: \"number\",\n    orientation: \"right\",\n    tickFormatter: tick => '$' + toK(tick),\n    axisLine: false,\n    tickLine: false,\n    interval: \"preserveEnd\",\n    minTickGap: 80,\n    yAxisId: 0,\n    tick: {\n      fill: textColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    cursor: true,\n    formatter: val => formattedNum(val, true),\n    labelFormatter: label => toNiceDateYear(label),\n    labelStyle: {\n      paddingTop: 4\n    },\n    contentStyle: {\n      padding: '10px 14px',\n      borderRadius: 10,\n      borderColor: color,\n      color: 'black'\n    },\n    wrapperStyle: {\n      top: -70,\n      left: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }), React.createElement(Area, {\n    key: 'other',\n    dataKey: 'totalLiquidityUSD',\n    stackId: \"2\",\n    strokeWidth: 2,\n    dot: false,\n    type: \"monotone\",\n    name: 'Liquidity',\n    yAxisId: 0,\n    stroke: darken(0.12, color),\n    fill: \"url(#colorUv)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }))), chartFilter === CHART_VIEW.PRICE && (frequency === DATA_FREQUENCY.LINE ? React.createElement(ResponsiveContainer, {\n    aspect: below1080 ? 60 / 32 : 60 / 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    margin: {\n      top: 0,\n      right: 10,\n      bottom: 6,\n      left: 0\n    },\n    barCategoryGap: 1,\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(\"linearGradient\", {\n    id: \"colorUv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: color,\n    stopOpacity: 0.35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }), React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: color,\n    stopOpacity: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }))), React.createElement(XAxis, {\n    tickLine: false,\n    axisLine: false,\n    interval: \"preserveEnd\",\n    tickMargin: 16,\n    minTickGap: 120,\n    tickFormatter: tick => toNiceDate(tick),\n    dataKey: \"date\",\n    tick: {\n      fill: textColor\n    },\n    type: 'number',\n    domain: domain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    type: \"number\",\n    orientation: \"right\",\n    tickFormatter: tick => '$' + toK(tick),\n    axisLine: false,\n    tickLine: false,\n    interval: \"preserveEnd\",\n    minTickGap: 80,\n    yAxisId: 0,\n    tick: {\n      fill: textColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    cursor: true,\n    formatter: val => formattedNum(val, true),\n    labelFormatter: label => toNiceDateYear(label),\n    labelStyle: {\n      paddingTop: 4\n    },\n    contentStyle: {\n      padding: '10px 14px',\n      borderRadius: 10,\n      borderColor: color,\n      color: 'black'\n    },\n    wrapperStyle: {\n      top: -70,\n      left: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }), React.createElement(Area, {\n    key: 'other',\n    dataKey: 'priceUSD',\n    stackId: \"2\",\n    strokeWidth: 2,\n    dot: false,\n    type: \"monotone\",\n    name: 'Price',\n    yAxisId: 0,\n    stroke: darken(0.12, color),\n    fill: \"url(#colorUv)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }))) : priceData ? React.createElement(ResponsiveContainer, {\n    aspect: aspect,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, React.createElement(CandleStickChart, {\n    data: priceData,\n    width: width,\n    base: base,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  })) : React.createElement(LocalLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  })), chartFilter === CHART_VIEW.VOLUME && React.createElement(ResponsiveContainer, {\n    aspect: aspect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: 10,\n      bottom: 6,\n      left: 10\n    },\n    barCategoryGap: 1,\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    tickLine: false,\n    axisLine: false,\n    interval: \"preserveEnd\",\n    minTickGap: 80,\n    tickMargin: 14,\n    tickFormatter: tick => toNiceDate(tick),\n    dataKey: \"date\",\n    tick: {\n      fill: textColor\n    },\n    type: 'number',\n    domain: ['dataMin', 'dataMax'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    type: \"number\",\n    axisLine: false,\n    tickMargin: 16,\n    tickFormatter: tick => '$' + toK(tick),\n    tickLine: false,\n    orientation: \"right\",\n    interval: \"preserveEnd\",\n    minTickGap: 80,\n    yAxisId: 0,\n    tick: {\n      fill: textColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    cursor: {\n      fill: color,\n      opacity: 0.1\n    },\n    formatter: val => formattedNum(val, true),\n    labelFormatter: label => toNiceDateYear(label),\n    labelStyle: {\n      paddingTop: 4\n    },\n    contentStyle: {\n      padding: '10px 14px',\n      borderRadius: 10,\n      borderColor: color,\n      color: 'black'\n    },\n    wrapperStyle: {\n      top: -70,\n      left: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    type: \"monotone\",\n    name: 'Volume',\n    dataKey: 'dailyVolumeUSD',\n    fill: color,\n    opacity: '0.4',\n    yAxisId: 0,\n    stroke: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }))));\n};\n\nexport default TokenChart;","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/pancake-info-v1/src/components/TokenChart/index.js"],"names":["React","useState","useRef","useEffect","styled","Area","XAxis","YAxis","ResponsiveContainer","Tooltip","AreaChart","BarChart","Bar","AutoRow","RowBetween","RowFixed","toK","toNiceDate","toNiceDateYear","formattedNum","getTimeframe","OptionButton","darken","useMedia","usePrevious","timeframeOptions","useTokenChartData","useTokenPriceData","DropdownSelect","CandleStickChart","LocalLoader","AutoColumn","Activity","useDarkModeManager","ChartWrapper","div","PriceOption","CHART_VIEW","VOLUME","LIQUIDITY","PRICE","LINE_PRICE","DATA_FREQUENCY","DAY","HOUR","LINE","TokenChart","address","color","base","chartFilter","setChartFilter","frequency","setFrequency","darkMode","textColor","addressPrev","chartData","timeWindow","setTimeWindow","ALL_TIME","prevWindow","hourlyWeek","WEEK","hourlyMonth","MONTH","hourlyAll","dailyWeek","dailyMonth","dailyAll","priceData","below1080","below600","utcStartTime","domain","dataMin","aspect","filter","entry","date","ref","isClient","window","width","setWidth","current","container","clientWidth","handleResize","addEventListener","removeEventListener","marginRight","top","right","bottom","left","tick","fill","val","label","paddingTop","padding","borderRadius","borderColor","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { useMedia, usePrevious } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { AutoColumn } from '../Column'\r\nimport { Activity } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  min-height: 300px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst PriceOption = styled(OptionButton)`\r\n  border-radius: 2px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  PRICE: 'Price',\r\n  LINE_PRICE: 'Price (Line)',\r\n}\r\n\r\nconst DATA_FREQUENCY = {\r\n  DAY: 'DAY',\r\n  HOUR: 'HOUR',\r\n  LINE: 'LINE',\r\n}\r\n\r\nconst TokenChart = ({ address, color, base }) => {\r\n  // settings for the window and candle width\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE)\r\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // reset view on new address\r\n  const addressPrev = usePrevious(address)\r\n  useEffect(() => {\r\n    if (address !== addressPrev && addressPrev) {\r\n      setChartFilter(CHART_VIEW.LIQUIDITY)\r\n    }\r\n  }, [address, addressPrev])\r\n\r\n  let chartData = useTokenChartData(address)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\r\n  const prevWindow = usePrevious(timeWindow)\r\n\r\n  // hourly and daily price data based on the current time window\r\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600)\r\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600)\r\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600)\r\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400)\r\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400)\r\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400)\r\n\r\n  const priceData =\r\n    timeWindow === timeframeOptions.MONTH\r\n      ? // monthly selected\r\n        frequency === DATA_FREQUENCY.DAY\r\n        ? dailyMonth\r\n        : hourlyMonth\r\n      : // weekly selected\r\n      timeWindow === timeframeOptions.WEEK\r\n      ? frequency === DATA_FREQUENCY.DAY\r\n        ? dailyWeek\r\n        : hourlyWeek\r\n      : // all time selected\r\n      frequency === DATA_FREQUENCY.DAY\r\n      ? dailyAll\r\n      : hourlyAll\r\n\r\n  // switch to hourly data when switched to week window\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\r\n      setFrequency(DATA_FREQUENCY.HOUR)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  // switch to daily data if switche to month or all time view\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\r\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22\r\n\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <RowBetween\r\n          mb={\r\n            chartFilter === CHART_VIEW.LIQUIDITY ||\r\n            chartFilter === CHART_VIEW.VOLUME ||\r\n            (chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE)\r\n              ? 40\r\n              : 0\r\n          }\r\n          align=\"flex-start\"\r\n        >\r\n          <AutoColumn gap=\"8px\">\r\n            <RowFixed>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n                onClick={() => setChartFilter(CHART_VIEW.LIQUIDITY)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Liquidity\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.VOLUME}\r\n                onClick={() => setChartFilter(CHART_VIEW.VOLUME)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Volume\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.PRICE}\r\n                onClick={() => {\r\n                  setChartFilter(CHART_VIEW.PRICE)\r\n                }}\r\n              >\r\n                Price\r\n              </OptionButton>\r\n            </RowFixed>\r\n            {chartFilter === CHART_VIEW.PRICE && (\r\n              <AutoRow gap=\"4px\">\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.DAY}\r\n                  onClick={() => {\r\n                    setTimeWindow(timeframeOptions.MONTH)\r\n                    setFrequency(DATA_FREQUENCY.DAY)\r\n                  }}\r\n                >\r\n                  D\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.HOUR}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.HOUR)}\r\n                >\r\n                  H\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.LINE}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.LINE)}\r\n                >\r\n                  <Activity size={14} />\r\n                </PriceOption>\r\n              </AutoRow>\r\n            )}\r\n          </AutoColumn>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\" align=\"flex-start\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </RowBetween>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && chartData && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={16}\r\n              minTickGap={120}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              key={'other'}\r\n              dataKey={'totalLiquidityUSD'}\r\n              stackId=\"2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={'Liquidity'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n      {chartFilter === CHART_VIEW.PRICE &&\r\n        (frequency === DATA_FREQUENCY.LINE ? (\r\n          <ResponsiveContainer aspect={below1080 ? 60 / 32 : 60 / 16}>\r\n            <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n              <defs>\r\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                  <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n                </linearGradient>\r\n              </defs>\r\n              <XAxis\r\n                tickLine={false}\r\n                axisLine={false}\r\n                interval=\"preserveEnd\"\r\n                tickMargin={16}\r\n                minTickGap={120}\r\n                tickFormatter={(tick) => toNiceDate(tick)}\r\n                dataKey=\"date\"\r\n                tick={{ fill: textColor }}\r\n                type={'number'}\r\n                domain={domain}\r\n              />\r\n              <YAxis\r\n                type=\"number\"\r\n                orientation=\"right\"\r\n                tickFormatter={(tick) => '$' + toK(tick)}\r\n                axisLine={false}\r\n                tickLine={false}\r\n                interval=\"preserveEnd\"\r\n                minTickGap={80}\r\n                yAxisId={0}\r\n                tick={{ fill: textColor }}\r\n              />\r\n              <Tooltip\r\n                cursor={true}\r\n                formatter={(val) => formattedNum(val, true)}\r\n                labelFormatter={(label) => toNiceDateYear(label)}\r\n                labelStyle={{ paddingTop: 4 }}\r\n                contentStyle={{\r\n                  padding: '10px 14px',\r\n                  borderRadius: 10,\r\n                  borderColor: color,\r\n                  color: 'black',\r\n                }}\r\n                wrapperStyle={{ top: -70, left: -10 }}\r\n              />\r\n              <Area\r\n                key={'other'}\r\n                dataKey={'priceUSD'}\r\n                stackId=\"2\"\r\n                strokeWidth={2}\r\n                dot={false}\r\n                type=\"monotone\"\r\n                name={'Price'}\r\n                yAxisId={0}\r\n                stroke={darken(0.12, color)}\r\n                fill=\"url(#colorUv)\"\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        ) : priceData ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart data={priceData} width={width} base={base} />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart margin={{ top: 0, right: 10, bottom: 6, left: 10 }} barCategoryGap={1} data={chartData}>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              orientation=\"right\"\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default TokenChart\r\n"]},"metadata":{},"sourceType":"module"}