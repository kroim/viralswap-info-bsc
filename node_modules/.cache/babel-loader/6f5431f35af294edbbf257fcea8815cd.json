{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\pancake-info-v1\\\\src\\\\components\\\\TokenList\\\\index.js\";\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { Box, Flex, Text } from 'rebass';\nimport TokenLogo from '../TokenLogo';\nimport { CustomLink } from '../Link';\nimport Row from '../Row';\nimport { Divider } from '..';\nimport { formattedNum, formattedPercent } from '../../utils';\nimport { useMedia } from 'react-use';\nimport { withRouter } from 'react-router-dom';\nimport { OVERVIEW_TOKEN_BLACKLIST } from '../../constants';\nimport FormattedName from '../FormattedName';\nimport { TYPE } from '../../Theme';\ndayjs.extend(utc);\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`;\nconst Arrow = styled.div`\n  color: ${({\n  theme\n}) => theme.primary1};\n  opacity: ${props => props.faded ? 0.3 : 1};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`;\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 680px) {\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 180px 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol ';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    display: grid;\n    grid-gap: 0.5em;\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol price change';\n  }\n`;\nconst ListWrapper = styled.div``;\nconst ClickableText = styled(Text)`\n  text-align: end;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n  color: ${({\n  theme\n}) => theme.text1};\n\n  @media screen and (max-width: 640px) {\n    font-size: 0.85rem;\n  }\n`;\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({\n  theme\n}) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`;\nconst SORT_FIELD = {\n  LIQ: 'totalLiquidityUSD',\n  VOL: 'oneDayVolumeUSD',\n  SYMBOL: 'symbol',\n  NAME: 'name',\n  PRICE: 'priceUSD',\n  CHANGE: 'priceChangeUSD'\n}; // @TODO rework into virtualized list\n\nfunction TopTokenList({\n  tokens,\n  itemMax = 10\n}) {\n  // page state\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1); // sorting\n\n  const [sortDirection, setSortDirection] = useState(true);\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ);\n  const below1080 = useMedia('(max-width: 1080px)');\n  const below680 = useMedia('(max-width: 680px)');\n  const below600 = useMedia('(max-width: 600px)');\n  useEffect(() => {\n    setMaxPage(1); // edit this to do modular\n\n    setPage(1);\n  }, [tokens]);\n  const formattedTokens = useMemo(() => {\n    return tokens && Object.keys(tokens).filter(key => {\n      return !OVERVIEW_TOKEN_BLACKLIST.includes(key);\n    }).map(key => tokens[key]);\n  }, [tokens]);\n  useEffect(() => {\n    if (tokens && formattedTokens) {\n      let extraPages = 1;\n\n      if (formattedTokens.length % itemMax === 0) {\n        extraPages = 0;\n      }\n\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages);\n    }\n  }, [tokens, formattedTokens, itemMax]);\n  const filteredList = useMemo(() => {\n    return formattedTokens && formattedTokens.sort((a, b) => {\n      if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\n        return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1;\n      }\n\n      return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn]) ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1;\n    }).slice(itemMax * (page - 1), page * itemMax);\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn]);\n\n  const ListItem = ({\n    item,\n    index\n  }) => {\n    return React.createElement(DashGrid, {\n      style: {\n        height: '48px'\n      },\n      focus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(DataText, {\n      area: \"name\",\n      fontWeight: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, !below680 && React.createElement(\"div\", {\n      style: {\n        marginRight: '1rem',\n        width: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, index), React.createElement(TokenLogo, {\n      address: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(CustomLink, {\n      style: {\n        marginLeft: '16px',\n        whiteSpace: 'nowrap'\n      },\n      to: '/token/' + item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(FormattedName, {\n      text: below680 ? item.symbol : item.name,\n      maxCharacters: below600 ? 8 : 16,\n      adjustSize: true,\n      link: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })))), !below680 && React.createElement(DataText, {\n      area: \"symbol\",\n      color: \"text\",\n      fontWeight: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(FormattedName, {\n      text: item.symbol.toUpperCase(),\n      maxCharacters: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(DataText, {\n      area: \"liq\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, formattedNum(item.totalLiquidityUSD, true, false)), React.createElement(DataText, {\n      area: \"vol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, formattedNum(item.oneDayVolumeUSD, true, false)), !below1080 && React.createElement(DataText, {\n      area: \"price\",\n      color: \"text\",\n      fontWeight: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, formattedNum(item.priceUSD, true)), !below1080 && React.createElement(DataText, {\n      area: \"change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, formattedPercent(item.priceChangeUSD)));\n  };\n\n  return React.createElement(ListWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(DashGrid, {\n    center: true,\n    style: {\n      height: 'fit-content',\n      padding: '0 1.125rem 1rem 1.125rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"flexStart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"name\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.NAME);\n      setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, below680 ? 'Symbol' : 'Name', \" \", sortedColumn === SORT_FIELD.NAME ? !sortDirection ? '↑' : '↓' : '')), !below680 && React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"symbol\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.SYMBOL);\n      setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Symbol \", sortedColumn === SORT_FIELD.SYMBOL ? !sortDirection ? '↑' : '↓' : '')), React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"liq\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.LIQ);\n      setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Liquidity \", sortedColumn === SORT_FIELD.LIQ ? !sortDirection ? '↑' : '↓' : '')), React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"vol\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.VOL);\n      setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Volume (24hrs)\", sortedColumn === SORT_FIELD.VOL ? !sortDirection ? '↑' : '↓' : '')), !below1080 && React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"price\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.PRICE);\n      setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Price \", sortedColumn === SORT_FIELD.PRICE ? !sortDirection ? '↑' : '↓' : '')), !below1080 && React.createElement(Flex, {\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(ClickableText, {\n    area: \"change\",\n    onClick: e => {\n      setSortedColumn(SORT_FIELD.CHANGE);\n      setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Price Change (24hrs)\", sortedColumn === SORT_FIELD.CHANGE ? !sortDirection ? '↑' : '↓' : ''))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }), React.createElement(List, {\n    p: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, filteredList && filteredList.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      key: index,\n      index: (page - 1) * itemMax + index + 1,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }));\n  })), React.createElement(PageButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => setPage(page === 1 ? page : page - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    faded: page === 1 ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, \"\\u2190\")), React.createElement(TYPE.body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, 'Page ' + page + ' of ' + maxPage), React.createElement(\"div\", {\n    onClick: () => setPage(page === maxPage ? page : page + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(Arrow, {\n    faded: page === maxPage ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, \"\\u2192\"))));\n}\n\nexport default withRouter(TopTokenList);","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/pancake-info-v1/src/components/TokenList/index.js"],"names":["React","useState","useEffect","useMemo","styled","dayjs","utc","Box","Flex","Text","TokenLogo","CustomLink","Row","Divider","formattedNum","formattedPercent","useMedia","withRouter","OVERVIEW_TOKEN_BLACKLIST","FormattedName","TYPE","extend","PageButtons","div","Arrow","theme","primary1","props","faded","List","DashGrid","ListWrapper","ClickableText","text1","DataText","SORT_FIELD","LIQ","VOL","SYMBOL","NAME","PRICE","CHANGE","TopTokenList","tokens","itemMax","page","setPage","maxPage","setMaxPage","sortDirection","setSortDirection","sortedColumn","setSortedColumn","below1080","below680","below600","formattedTokens","Object","keys","filter","key","includes","map","extraPages","length","Math","floor","filteredList","sort","a","b","parseFloat","slice","ListItem","item","index","height","marginRight","width","id","marginLeft","whiteSpace","symbol","name","toUpperCase","totalLiquidityUSD","oneDayVolumeUSD","priceUSD","priceChangeUSD","padding","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { CustomLink } from '../Link'\r\nimport Row from '../Row'\r\nimport { Divider } from '..'\r\n\r\nimport { formattedNum, formattedPercent } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { OVERVIEW_TOKEN_BLACKLIST } from '../../constants'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 2em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'name liq vol';\r\n  padding: 0 1.125rem;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 680px) {\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-template-columns: 180px 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol ';\r\n\r\n    > * {\r\n      justify-content: flex-end;\r\n      width: 100%;\r\n\r\n      &:first-child {\r\n        justify-content: flex-start;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol price change';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst ClickableText = styled(Text)`\r\n  text-align: end;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n  user-select: none;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  LIQ: 'totalLiquidityUSD',\r\n  VOL: 'oneDayVolumeUSD',\r\n  SYMBOL: 'symbol',\r\n  NAME: 'name',\r\n  PRICE: 'priceUSD',\r\n  CHANGE: 'priceChangeUSD',\r\n}\r\n\r\n// @TODO rework into virtualized list\r\nfunction TopTokenList({ tokens, itemMax = 10 }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below680 = useMedia('(max-width: 680px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [tokens])\r\n\r\n  const formattedTokens = useMemo(() => {\r\n    return (\r\n      tokens &&\r\n      Object.keys(tokens)\r\n        .filter((key) => {\r\n          return !OVERVIEW_TOKEN_BLACKLIST.includes(key)\r\n        })\r\n        .map((key) => tokens[key])\r\n    )\r\n  }, [tokens])\r\n\r\n  useEffect(() => {\r\n    if (tokens && formattedTokens) {\r\n      let extraPages = 1\r\n      if (formattedTokens.length % itemMax === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\r\n    }\r\n  }, [tokens, formattedTokens, itemMax])\r\n\r\n  const filteredList = useMemo(() => {\r\n    return (\r\n      formattedTokens &&\r\n      formattedTokens\r\n        .sort((a, b) => {\r\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\r\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\r\n          }\r\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n            ? (sortDirection ? -1 : 1) * 1\r\n            : (sortDirection ? -1 : 1) * -1\r\n        })\r\n        .slice(itemMax * (page - 1), page * itemMax)\r\n    )\r\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\r\n\r\n  const ListItem = ({ item, index }) => {\r\n    return (\r\n      <DashGrid style={{ height: '48px' }} focus={true}>\r\n        <DataText area=\"name\" fontWeight=\"500\">\r\n          <Row>\r\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\r\n            <TokenLogo address={item.id} />\r\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\r\n              <FormattedName\r\n                text={below680 ? item.symbol : item.name}\r\n                maxCharacters={below600 ? 8 : 16}\r\n                adjustSize={true}\r\n                link={true}\r\n              />\r\n            </CustomLink>\r\n          </Row>\r\n        </DataText>\r\n        {!below680 && (\r\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\r\n            <FormattedName text={item.symbol.toUpperCase()} maxCharacters={5} />\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true, false)}</DataText>\r\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true, false)}</DataText>\r\n        {!below1080 && (\r\n          <DataText area=\"price\" color=\"text\" fontWeight=\"500\">\r\n            {formattedNum(item.priceUSD, true)}\r\n          </DataText>\r\n        )}\r\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            area=\"name\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.NAME)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection)\r\n            }}\r\n          >\r\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below680 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"symbol\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.SYMBOL)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"liq\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.LIQ)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"vol\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VOL)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Volume (24hrs)\r\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"price\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.PRICE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"change\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.CHANGE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price Change (24hrs)\r\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {filteredList &&\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })}\r\n      </List>\r\n      <PageButtons>\r\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopTokenList)\r\n"]},"metadata":{},"sourceType":"module"}