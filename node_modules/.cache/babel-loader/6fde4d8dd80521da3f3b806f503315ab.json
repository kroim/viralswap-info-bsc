{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\viralswap-info-bsc\\\\src\\\\components\\\\PairChart\\\\index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts';\nimport { RowBetween, AutoRow } from '../Row';\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils';\nimport { OptionButton } from '../ButtonStyled';\nimport { darken } from 'polished';\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData';\nimport { timeframeOptions } from '../../constants';\nimport { useMedia } from 'react-use';\nimport { EmptyCard } from '..';\nimport DropdownSelect from '../DropdownSelect';\nimport CandleStickChart from '../CandleChart';\nimport LocalLoader from '../LocalLoader';\nimport { useDarkModeManager } from '../../contexts/LocalStorage';\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 340px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`;\nconst OptionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 40px;\n`;\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  RATE0: 'Rate 0',\n  RATE1: 'Rate 1'\n};\n\nconst PairChart = ({\n  address,\n  color,\n  base0,\n  base1\n}) => {\n  var _ref$current, _ref$current$containe, _ref$current2, _ref$current2$contain, _pairData$token, _pairData$token2, _pairData$token3, _pairData$token4, _pairData$token5, _pairData$token6, _chartData;\n\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY);\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME);\n  const [darkMode] = useDarkModeManager();\n  const textColor = darkMode ? 'white' : 'black'; // update the width on a window resize\n\n  const ref = useRef();\n  const isClient = typeof window === 'object';\n  const [width, setWidth] = useState(ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : (_ref$current$containe = _ref$current.container) === null || _ref$current$containe === void 0 ? void 0 : _ref$current$containe.clientWidth);\n  const [height, setHeight] = useState(ref === null || ref === void 0 ? void 0 : (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : (_ref$current2$contain = _ref$current2.container) === null || _ref$current2$contain === void 0 ? void 0 : _ref$current2$contain.clientHeight);\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      var _ref, _ref$current3, _ref$current3$contain, _ref2, _ref$current4, _ref$current4$contain;\n\n      setWidth((_ref = ref === null || ref === void 0 ? void 0 : (_ref$current3 = ref.current) === null || _ref$current3 === void 0 ? void 0 : (_ref$current3$contain = _ref$current3.container) === null || _ref$current3$contain === void 0 ? void 0 : _ref$current3$contain.clientWidth) !== null && _ref !== void 0 ? _ref : width);\n      setHeight((_ref2 = ref === null || ref === void 0 ? void 0 : (_ref$current4 = ref.current) === null || _ref$current4 === void 0 ? void 0 : (_ref$current4$contain = _ref$current4.container) === null || _ref$current4$contain === void 0 ? void 0 : _ref$current4$contain.clientHeight) !== null && _ref2 !== void 0 ? _ref2 : height);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [height, isClient, width]); // Empty array ensures that effect is only run on mount and unmount\n  // get data for pair, and rates\n\n  const pairData = usePairData(address);\n  let chartData = usePairChartData(address);\n  const hourlyData = useHourlyRateData(address, timeWindow);\n  const hourlyRate0 = hourlyData && hourlyData[0];\n  const hourlyRate1 = hourlyData && hourlyData[1]; // formatted symbols for overflow\n\n  const formattedSymbol0 = (pairData === null || pairData === void 0 ? void 0 : (_pairData$token = pairData.token0) === null || _pairData$token === void 0 ? void 0 : _pairData$token.symbol.length) > 6 ? (pairData === null || pairData === void 0 ? void 0 : (_pairData$token2 = pairData.token0) === null || _pairData$token2 === void 0 ? void 0 : _pairData$token2.symbol.slice(0, 5)) + '...' : pairData === null || pairData === void 0 ? void 0 : (_pairData$token3 = pairData.token0) === null || _pairData$token3 === void 0 ? void 0 : _pairData$token3.symbol;\n  const formattedSymbol1 = (pairData === null || pairData === void 0 ? void 0 : (_pairData$token4 = pairData.token1) === null || _pairData$token4 === void 0 ? void 0 : _pairData$token4.symbol.length) > 6 ? (pairData === null || pairData === void 0 ? void 0 : (_pairData$token5 = pairData.token1) === null || _pairData$token5 === void 0 ? void 0 : _pairData$token5.symbol.slice(0, 5)) + '...' : pairData === null || pairData === void 0 ? void 0 : (_pairData$token6 = pairData.token1) === null || _pairData$token6 === void 0 ? void 0 : _pairData$token6.symbol;\n  const below1600 = useMedia('(max-width: 1600px)');\n  const below1080 = useMedia('(max-width: 1080px)');\n  const below600 = useMedia('(max-width: 600px)');\n  let utcStartTime = getTimeframe(timeWindow);\n  chartData = (_chartData = chartData) === null || _chartData === void 0 ? void 0 : _chartData.filter(entry => entry.date >= utcStartTime);\n\n  if (chartData && chartData.length === 0) {\n    return React.createElement(ChartWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(EmptyCard, {\n      height: \"300px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"No historical data yet.\"), ' ');\n  }\n  /**\r\n   * Used to format values on chart on scroll\r\n   * Needs to be raw html for chart API to parse styles\r\n   * @param {*} val\r\n   */\n\n\n  function valueFormatter(val) {\n    if (chartFilter === CHART_VIEW.RATE0) {\n      return formattedNum(val) + `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`;\n    }\n\n    if (chartFilter === CHART_VIEW.RATE1) {\n      return formattedNum(val) + `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`;\n    }\n  }\n\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22;\n  return React.createElement(ChartWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, below600 ? React.createElement(RowBetween, {\n    mb: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(DropdownSelect, {\n    options: CHART_VIEW,\n    active: chartFilter,\n    setActive: setChartFilter,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(DropdownSelect, {\n    options: timeframeOptions,\n    active: timeWindow,\n    setActive: setTimeWindow,\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })) : React.createElement(OptionsRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(AutoRow, {\n    gap: \"6px\",\n    style: {\n      flexWrap: 'nowrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(OptionButton, {\n    active: chartFilter === CHART_VIEW.LIQUIDITY,\n    onClick: () => {\n      setTimeWindow(timeframeOptions.ALL_TIME);\n      setChartFilter(CHART_VIEW.LIQUIDITY);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Liquidity\"), React.createElement(OptionButton, {\n    active: chartFilter === CHART_VIEW.VOLUME,\n    onClick: () => {\n      setTimeWindow(timeframeOptions.ALL_TIME);\n      setChartFilter(CHART_VIEW.VOLUME);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Volume\"), React.createElement(OptionButton, {\n    active: chartFilter === CHART_VIEW.RATE0,\n    onClick: () => {\n      setTimeWindow(timeframeOptions.WEEK);\n      setChartFilter(CHART_VIEW.RATE0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'), React.createElement(OptionButton, {\n    active: chartFilter === CHART_VIEW.RATE1,\n    onClick: () => {\n      setTimeWindow(timeframeOptions.WEEK);\n      setChartFilter(CHART_VIEW.RATE1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-')), React.createElement(AutoRow, {\n    justify: \"flex-end\",\n    gap: \"6px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(OptionButton, {\n    active: timeWindow === timeframeOptions.WEEK,\n    onClick: () => setTimeWindow(timeframeOptions.WEEK),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"1W\"), React.createElement(OptionButton, {\n    active: timeWindow === timeframeOptions.MONTH,\n    onClick: () => setTimeWindow(timeframeOptions.MONTH),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"1M\"), React.createElement(OptionButton, {\n    active: timeWindow === timeframeOptions.ALL_TIME,\n    onClick: () => setTimeWindow(timeframeOptions.ALL_TIME),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"All\"))), chartFilter === CHART_VIEW.LIQUIDITY && React.createElement(ResponsiveContainer, {\n    aspect: aspect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    margin: {\n      top: 0,\n      right: 10,\n      bottom: 6,\n      left: 0\n    },\n    barCategoryGap: 1,\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"linearGradient\", {\n    id: \"colorUv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: color,\n    stopOpacity: 0.35,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: color,\n    stopOpacity: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), React.createElement(XAxis, {\n    tickLine: false,\n    axisLine: false,\n    interval: \"preserveEnd\",\n    tickMargin: 14,\n    minTickGap: 80,\n    tickFormatter: tick => toNiceDate(tick),\n    dataKey: \"date\",\n    tick: {\n      fill: textColor\n    },\n    type: 'number',\n    domain: ['dataMin', 'dataMax'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    type: \"number\",\n    orientation: \"right\",\n    tickFormatter: tick => '$' + toK(tick),\n    axisLine: false,\n    tickLine: false,\n    interval: \"preserveEnd\",\n    minTickGap: 80,\n    yAxisId: 0,\n    tickMargin: 16,\n    tick: {\n      fill: textColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    cursor: true,\n    formatter: val => formattedNum(val, true),\n    labelFormatter: label => toNiceDateYear(label),\n    labelStyle: {\n      paddingTop: 4\n    },\n    contentStyle: {\n      padding: '10px 14px',\n      borderRadius: 10,\n      borderColor: color,\n      color: 'black'\n    },\n    wrapperStyle: {\n      top: -70,\n      left: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(Area, {\n    strokeWidth: 2,\n    dot: false,\n    type: \"monotone\",\n    name: ' (USD)',\n    dataKey: 'reserveUSD',\n    yAxisId: 0,\n    stroke: darken(0.12, color),\n    fill: \"url(#colorUv)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }))), chartFilter === CHART_VIEW.RATE1 && (hourlyRate1 ? React.createElement(ResponsiveContainer, {\n    aspect: aspect,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(CandleStickChart, {\n    data: hourlyRate1,\n    base: base0,\n    margin: false,\n    width: width,\n    valueFormatter: valueFormatter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  })) : React.createElement(LocalLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  })), chartFilter === CHART_VIEW.RATE0 && (hourlyRate0 ? React.createElement(ResponsiveContainer, {\n    aspect: aspect,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(CandleStickChart, {\n    data: hourlyRate0,\n    base: base1,\n    margin: false,\n    width: width,\n    valueFormatter: valueFormatter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  })) : React.createElement(LocalLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  })), chartFilter === CHART_VIEW.VOLUME && React.createElement(ResponsiveContainer, {\n    aspect: aspect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(BarChart, {\n    margin: {\n      top: 0,\n      right: 0,\n      bottom: 6,\n      left: below1080 ? 0 : 10\n    },\n    barCategoryGap: 1,\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    tickLine: false,\n    axisLine: false,\n    interval: \"preserveEnd\",\n    minTickGap: 80,\n    tickMargin: 14,\n    tickFormatter: tick => toNiceDate(tick),\n    dataKey: \"date\",\n    tick: {\n      fill: textColor\n    },\n    type: 'number',\n    domain: ['dataMin', 'dataMax'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    type: \"number\",\n    axisLine: false,\n    tickMargin: 16,\n    tickFormatter: tick => '$' + toK(tick),\n    tickLine: false,\n    interval: \"preserveEnd\",\n    orientation: \"right\",\n    minTickGap: 80,\n    yAxisId: 0,\n    tick: {\n      fill: textColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    cursor: {\n      fill: color,\n      opacity: 0.1\n    },\n    formatter: val => formattedNum(val, true),\n    labelFormatter: label => toNiceDateYear(label),\n    labelStyle: {\n      paddingTop: 4\n    },\n    contentStyle: {\n      padding: '10px 14px',\n      borderRadius: 10,\n      borderColor: color,\n      color: 'black'\n    },\n    wrapperStyle: {\n      top: -70,\n      left: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    type: \"monotone\",\n    name: 'Volume',\n    dataKey: 'dailyVolumeUSD',\n    fill: color,\n    opacity: '0.4',\n    yAxisId: 0,\n    stroke: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }))));\n};\n\nexport default PairChart;","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/viralswap-info-bsc/src/components/PairChart/index.js"],"names":["React","useState","useRef","useEffect","styled","Area","XAxis","YAxis","ResponsiveContainer","Tooltip","AreaChart","BarChart","Bar","RowBetween","AutoRow","toK","toNiceDate","toNiceDateYear","formattedNum","getTimeframe","OptionButton","darken","usePairChartData","useHourlyRateData","usePairData","timeframeOptions","useMedia","EmptyCard","DropdownSelect","CandleStickChart","LocalLoader","useDarkModeManager","ChartWrapper","div","OptionsRow","CHART_VIEW","VOLUME","LIQUIDITY","RATE0","RATE1","PairChart","address","color","base0","base1","chartFilter","setChartFilter","timeWindow","setTimeWindow","ALL_TIME","darkMode","textColor","ref","isClient","window","width","setWidth","current","container","clientWidth","height","setHeight","clientHeight","handleResize","addEventListener","removeEventListener","pairData","chartData","hourlyData","hourlyRate0","hourlyRate1","formattedSymbol0","token0","symbol","length","slice","formattedSymbol1","token1","below1600","below1080","below600","utcStartTime","filter","entry","date","valueFormatter","val","aspect","flexWrap","WEEK","MONTH","top","right","bottom","left","tick","fill","label","paddingTop","padding","borderRadius","borderColor","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { RowBetween, AutoRow } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useMedia } from 'react-use'\r\nimport { EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  max-height: 340px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst OptionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  RATE0: 'Rate 0',\r\n  RATE1: 'Rate 1',\r\n}\r\n\r\nconst PairChart = ({ address, color, base0, base1 }) => {\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  const [height, setHeight] = useState(ref?.current?.container?.clientHeight)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n      setHeight(ref?.current?.container?.clientHeight ?? height)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [height, isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  // get data for pair, and rates\r\n  const pairData = usePairData(address)\r\n  let chartData = usePairChartData(address)\r\n  const hourlyData = useHourlyRateData(address, timeWindow)\r\n  const hourlyRate0 = hourlyData && hourlyData[0]\r\n  const hourlyRate1 = hourlyData && hourlyData[1]\r\n\r\n  // formatted symbols for overflow\r\n  const formattedSymbol0 =\r\n    pairData?.token0?.symbol.length > 6 ? pairData?.token0?.symbol.slice(0, 5) + '...' : pairData?.token0?.symbol\r\n  const formattedSymbol1 =\r\n    pairData?.token1?.symbol.length > 6 ? pairData?.token1?.symbol.slice(0, 5) + '...' : pairData?.token1?.symbol\r\n\r\n  const below1600 = useMedia('(max-width: 1600px)')\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  if (chartData && chartData.length === 0) {\r\n    return (\r\n      <ChartWrapper>\r\n        <EmptyCard height=\"300px\">No historical data yet.</EmptyCard>{' '}\r\n      </ChartWrapper>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Used to format values on chart on scroll\r\n   * Needs to be raw html for chart API to parse styles\r\n   * @param {*} val\r\n   */\r\n  function valueFormatter(val) {\r\n    if (chartFilter === CHART_VIEW.RATE0) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`\r\n      )\r\n    }\r\n    if (chartFilter === CHART_VIEW.RATE1) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`\r\n      )\r\n    }\r\n  }\r\n\r\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <OptionsRow>\r\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.LIQUIDITY)\r\n              }}\r\n            >\r\n              Liquidity\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.VOLUME}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.VOLUME)\r\n              }}\r\n            >\r\n              Volume\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE0}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE0)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'}\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE1}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE1)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-'}\r\n            </OptionButton>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </OptionsRow>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={14}\r\n              minTickGap={80}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tickMargin={16}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={' (USD)'}\r\n              dataKey={'reserveUSD'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n\r\n      {chartFilter === CHART_VIEW.RATE1 &&\r\n        (hourlyRate1 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate1}\r\n              base={base0}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.RATE0 &&\r\n        (hourlyRate0 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate0}\r\n              base={base1}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart\r\n            margin={{ top: 0, right: 0, bottom: 6, left: below1080 ? 0 : 10 }}\r\n            barCategoryGap={1}\r\n            data={chartData}\r\n          >\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              orientation=\"right\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default PairChart\r\n"]},"metadata":{},"sourceType":"module"}