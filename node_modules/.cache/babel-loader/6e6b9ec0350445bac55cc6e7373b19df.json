{"ast":null,"code":"var _jsxFileName = \"B:\\\\2021\\\\1219_ViralCoin\\\\work\\\\NewSubgraph\\\\viralswap-info-bsc\\\\src\\\\components\\\\CandleChart\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createChart, CrosshairMode } from 'lightweight-charts';\nimport dayjs from 'dayjs';\nimport { formattedNum } from '../../utils';\nimport { usePrevious } from 'react-use';\nimport styled from 'styled-components';\nimport { Play } from 'react-feather';\nimport { useDarkModeManager } from '../../contexts/LocalStorage';\nconst IconWrapper = styled.div`\n  position: absolute;\n  right: 10px;\n  color: ${({\n  theme\n}) => theme.text1}\n  border-radius: 3px;\n  height: 16px;\n  width: 16px;\n  padding: 0px;\n  bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`;\n\nconst CandleStickChart = ({\n  data,\n  width,\n  height = 300,\n  base,\n  margin = true,\n  valueFormatter = val => formattedNum(val, true)\n}) => {\n  // reference for DOM element to create with chart\n  const ref = useRef();\n  const formattedData = data === null || data === void 0 ? void 0 : data.map(entry => {\n    return {\n      time: parseFloat(entry.timestamp),\n      open: parseFloat(entry.open),\n      low: parseFloat(entry.open),\n      close: parseFloat(entry.close),\n      high: parseFloat(entry.close)\n    };\n  });\n\n  if (formattedData && formattedData.length > 0) {\n    let curTimestamp = parseInt(Date.now() / 1000 - 300);\n    formattedData.push({\n      // time: dayjs.unix(1616025600).unix(),\n      time: dayjs.unix(curTimestamp).unix(),\n      open: parseFloat(formattedData[formattedData.length - 1].close),\n      close: parseFloat(base),\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close))\n    });\n  } // pointer to the chart object\n\n\n  const [chartCreated, setChartCreated] = useState(false);\n  const dataPrev = usePrevious(data);\n  const [darkMode] = useDarkModeManager();\n  const textColor = darkMode ? 'white' : 'black';\n  const previousTheme = usePrevious(darkMode); // reset the chart if theme switches\n\n  useEffect(() => {\n    if (chartCreated && previousTheme !== darkMode) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id');\n      let node = document.getElementById('test-id');\n      node.removeChild(tooltip);\n      chartCreated.resize(0, 0);\n      setChartCreated();\n    }\n  }, [chartCreated, darkMode, previousTheme]);\n  useEffect(() => {\n    if (data !== dataPrev && chartCreated) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id');\n      let node = document.getElementById('test-id');\n      node.removeChild(tooltip);\n      chartCreated.resize(0, 0);\n      setChartCreated();\n    }\n  }, [chartCreated, data, dataPrev]); // if no chart created yet, create one with options and add to DOM manually\n\n  useEffect(() => {\n    if (!chartCreated) {\n      const chart = createChart(ref.current, {\n        width: width,\n        height: height,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor\n        },\n        grid: {\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)'\n          },\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)'\n          }\n        },\n        crosshair: {\n          mode: CrosshairMode.Normal\n        },\n        rightPriceScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n          visible: true\n        },\n        timeScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)'\n        },\n        localization: {\n          priceFormatter: val => formattedNum(val)\n        }\n      });\n      var candleSeries = chart.addCandlestickSeries({\n        upColor: 'green',\n        downColor: 'red',\n        borderDownColor: 'red',\n        borderUpColor: 'green',\n        wickDownColor: 'red',\n        wickUpColor: 'green'\n      });\n      candleSeries.setData(formattedData);\n      var toolTip = document.createElement('div');\n      toolTip.setAttribute('id', 'tooltip-id');\n      toolTip.className = 'three-line-legend';\n      ref.current.appendChild(toolTip);\n      toolTip.style.display = 'block';\n      toolTip.style.left = (margin ? 116 : 10) + 'px';\n      toolTip.style.top = 50 + 'px';\n      toolTip.style.backgroundColor = 'transparent'; // get the title of the chart\n\n      function setLastBarText() {\n        toolTip.innerHTML = base ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>' : '';\n      }\n\n      setLastBarText(); // update the title when hovering on the chart\n\n      chart.subscribeCrosshairMove(function (param) {\n        if (param === undefined || param.time === undefined || param.point.x < 0 || param.point.x > width || param.point.y < 0 || param.point.y > height) {\n          setLastBarText();\n        } else {\n          var price = param.seriesPrices.get(candleSeries).close;\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A');\n          toolTip.innerHTML = `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(price) + `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` + time + ' UTC' + '</span>' + '</div>';\n        }\n      });\n      chart.timeScale().fitContent();\n      setChartCreated(chart);\n    }\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor]); // responsiveness\n\n  useEffect(() => {\n    if (width) {\n      chartCreated && chartCreated.resize(width, height);\n      chartCreated && chartCreated.timeScale().scrollToPosition(0);\n    }\n  }, [chartCreated, height, width]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: ref,\n    id: \"test-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(IconWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Play, {\n    onClick: () => {\n      chartCreated && chartCreated.timeScale().fitContent();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  })));\n};\n\nexport default CandleStickChart;","map":{"version":3,"sources":["B:/2021/1219_ViralCoin/work/NewSubgraph/viralswap-info-bsc/src/components/CandleChart/index.js"],"names":["React","useState","useEffect","useRef","createChart","CrosshairMode","dayjs","formattedNum","usePrevious","styled","Play","useDarkModeManager","IconWrapper","div","theme","text1","CandleStickChart","data","width","height","base","margin","valueFormatter","val","ref","formattedData","map","entry","time","parseFloat","timestamp","open","low","close","high","length","curTimestamp","parseInt","Date","now","push","unix","Math","min","max","chartCreated","setChartCreated","dataPrev","darkMode","textColor","previousTheme","tooltip","document","getElementById","node","removeChild","resize","chart","current","layout","backgroundColor","grid","vertLines","color","horzLines","crosshair","mode","Normal","rightPriceScale","borderColor","visible","timeScale","localization","priceFormatter","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","toolTip","createElement","setAttribute","className","appendChild","style","display","left","top","setLastBarText","innerHTML","subscribeCrosshairMove","param","undefined","point","x","y","price","seriesPrices","get","format","fitContent","scrollToPosition"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { createChart, CrosshairMode } from 'lightweight-charts'\r\nimport dayjs from 'dayjs'\r\nimport { formattedNum } from '../../utils'\r\nimport { usePrevious } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Play } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  color: ${({ theme }) => theme.text1}\r\n  border-radius: 3px;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding: 0px;\r\n  bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst CandleStickChart = ({\r\n  data,\r\n  width,\r\n  height = 300,\r\n  base,\r\n  margin = true,\r\n  valueFormatter = (val) => formattedNum(val, true),\r\n}) => {\r\n  // reference for DOM element to create with chart\r\n  const ref = useRef()\r\n\r\n  const formattedData = data?.map((entry) => {\r\n    return {\r\n      time: parseFloat(entry.timestamp),\r\n      open: parseFloat(entry.open),\r\n      low: parseFloat(entry.open),\r\n      close: parseFloat(entry.close),\r\n      high: parseFloat(entry.close),\r\n    }\r\n  })\r\n\r\n  if (formattedData && formattedData.length > 0) {\r\n    let curTimestamp = parseInt(Date.now() / 1000 - 300)\r\n    formattedData.push({\r\n      // time: dayjs.unix(1616025600).unix(),\r\n      time: dayjs.unix(curTimestamp).unix(),\r\n      open: parseFloat(formattedData[formattedData.length - 1].close),\r\n      close: parseFloat(base),\r\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n    })\r\n  }\r\n\r\n  // pointer to the chart object\r\n  const [chartCreated, setChartCreated] = useState(false)\r\n  const dataPrev = usePrevious(data)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n  const previousTheme = usePrevious(darkMode)\r\n\r\n  // reset the chart if theme switches\r\n  useEffect(() => {\r\n    if (chartCreated && previousTheme !== darkMode) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, darkMode, previousTheme])\r\n\r\n  useEffect(() => {\r\n    if (data !== dataPrev && chartCreated) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, data, dataPrev])\r\n\r\n  // if no chart created yet, create one with options and add to DOM manually\r\n  useEffect(() => {\r\n    if (!chartCreated) {\r\n      const chart = createChart(ref.current, {\r\n        width: width,\r\n        height: height,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: textColor,\r\n        },\r\n        grid: {\r\n          vertLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n          },\r\n          horzLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n          },\r\n        },\r\n        crosshair: {\r\n          mode: CrosshairMode.Normal,\r\n        },\r\n        rightPriceScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n          visible: true,\r\n        },\r\n        timeScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n        },\r\n        localization: {\r\n          priceFormatter: (val) => formattedNum(val),\r\n        },\r\n      })\r\n\r\n      var candleSeries = chart.addCandlestickSeries({\r\n        upColor: 'green',\r\n        downColor: 'red',\r\n        borderDownColor: 'red',\r\n        borderUpColor: 'green',\r\n        wickDownColor: 'red',\r\n        wickUpColor: 'green',\r\n      })\r\n\r\n      candleSeries.setData(formattedData)\r\n\r\n      var toolTip = document.createElement('div')\r\n      toolTip.setAttribute('id', 'tooltip-id')\r\n      toolTip.className = 'three-line-legend'\r\n      ref.current.appendChild(toolTip)\r\n      toolTip.style.display = 'block'\r\n      toolTip.style.left = (margin ? 116 : 10) + 'px'\r\n      toolTip.style.top = 50 + 'px'\r\n      toolTip.style.backgroundColor = 'transparent'\r\n\r\n      // get the title of the chart\r\n      function setLastBarText() {\r\n        toolTip.innerHTML = base\r\n          ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>'\r\n          : ''\r\n      }\r\n      setLastBarText()\r\n\r\n      // update the title when hovering on the chart\r\n      chart.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          param === undefined ||\r\n          param.time === undefined ||\r\n          param.point.x < 0 ||\r\n          param.point.x > width ||\r\n          param.point.y < 0 ||\r\n          param.point.y > height\r\n        ) {\r\n          setLastBarText()\r\n        } else {\r\n          var price = param.seriesPrices.get(candleSeries).close\r\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A')\r\n          toolTip.innerHTML =\r\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\r\n            valueFormatter(price) +\r\n            `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` +\r\n            time +\r\n            ' UTC' +\r\n            '</span>' +\r\n            '</div>'\r\n        }\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n\r\n      setChartCreated(chart)\r\n    }\r\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor])\r\n\r\n  // responsiveness\r\n  useEffect(() => {\r\n    if (width) {\r\n      chartCreated && chartCreated.resize(width, height)\r\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\r\n    }\r\n  }, [chartCreated, height, width])\r\n\r\n  return (\r\n    <div>\r\n      <div ref={ref} id=\"test-id\" />\r\n      <IconWrapper>\r\n        <Play\r\n          onClick={() => {\r\n            chartCreated && chartCreated.timeScale().fitContent()\r\n          }}\r\n        />\r\n      </IconWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CandleStickChart\r\n"]},"metadata":{},"sourceType":"module"}